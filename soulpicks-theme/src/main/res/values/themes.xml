<?xml version="1.0" encoding="utf-8"?><!--
~ Copyright (C) 2019 The Android Open Source Project
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~      http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<resources xmlns:tools="http://schemas.android.com/tools">
    <!--Top level DayNight theme to be used in AndroidManifest.xml-->
    <style name="Theme.Soulpicks" parent="Base.Theme.Soulpicks" />

    <style name="Theme.Soulpicks.Onboarding" parent="Theme.Soulpicks">
        <item name="android:colorBackground">@color/white</item>
    </style>

    <!--Base custom theme which will be shared between both light and dark theme variants-->
    <style name="Base.Theme.Soulpicks" parent="Base.Theme.SoulpicksThemeBuilder">
        <!--Material color attributes (light theme) -->
        <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
        <!--colorSecondary colors are most often used as accents on components, such as FABs and -->
        <!--selection controls.-->
        <item name="colorPrimary">@color/primary</item>
        <item name="colorPrimaryVariant">@color/primaryVariant</item>
        <!--        <item name="colorSecondary">@color/secondary</item>-->
        <!--        <item name="colorSecondaryVariant">@color/secondaryVariant</item>-->
        <item name="colorSecondary">@color/primary</item>
        <item name="colorSecondaryVariant">@color/primaryVariant</item>

        <!--colorBackground appears behind scrollable content and is used for the default window-->
        <!--background. colorSurface is mapped to the surface of components such as cards, sheets-->
        <!--and menus. colorError is used to indicate an error state for components such as-->
        <!--text fields.-->
        <item name="android:colorBackground">@color/background</item>
        <item name="colorSurface">@color/surface</item>
        <item name="colorError">@color/error</item>
        <!--"On" colors define how text, icons and strokes are colored in relation to the surface-->
        <!--on which they appear.-->
        <item name="colorOnPrimary">@color/onPrimary</item>
        <!--        <item name="colorOnSecondary">@color/onSecondary</item>-->
        <item name="colorOnSecondary">@color/onPrimary</item>
        <item name="colorOnBackground">@color/onBackground</item>
        <item name="colorOnSurface">@color/onSurface</item>
        <item name="colorOnError">@color/onError</item>

        <item name="bottomNavTextColor">@color/steel</item>
        <item name="chipHighlightColor">@color/steel</item>


        <!-- Text colors -->
        <item name="android:textColorPrimary">?attr/colorOnBackground</item>
        <item name="android:textColorSecondary">@color/steel</item>

        <!-- i.e. Edit text cursor color -->
        <!--        <item name="android:colorControlActivated">@color/colorControlActivated</item>-->
        <!-- i.e. Ripple effect color -->
        <!--        <item name="android:colorControlHighlight">@color/colorControlHighlight</item>-->

        <!--Material type attributes-->
        <item name="textAppearanceHeadline1">@style/TextAppearance.Soulpicks.Headline1</item>
        <item name="textAppearanceHeadline2">@style/TextAppearance.Soulpicks.Headline2</item>
        <item name="textAppearanceHeadline3">@style/TextAppearance.Soulpicks.Headline3</item>
        <item name="textAppearanceHeadline4">@style/TextAppearance.Soulpicks.Headline4</item>
        <item name="textAppearanceHeadline5">@style/TextAppearance.Soulpicks.Headline5</item>
        <item name="textAppearanceHeadline6">@style/TextAppearance.Soulpicks.Headline6</item>
        <item name="textAppearanceSubtitle1">@style/TextAppearance.Soulpicks.Subtitle1</item>
        <item name="textAppearanceSubtitle2">@style/TextAppearance.Soulpicks.Subtitle2</item>
        <item name="textAppearanceBody1">@style/TextAppearance.Soulpicks.Body1</item>
        <item name="textAppearanceBody2">@style/TextAppearance.Soulpicks.Body2</item>
        <item name="textAppearanceButton">@style/TextAppearance.Soulpicks.Button</item>
        <item name="textAppearanceCaption">@style/TextAppearance.Soulpicks.Caption</item>
        <item name="textAppearanceOverline">@style/TextAppearance.Soulpicks.Overline</item>
        <!--Material shape attributes-->
        <item name="shapeAppearanceSmallComponent">@style/ShapeAppearance.Soulpicks.SmallComponent
        </item>
        <item name="shapeAppearanceMediumComponent">@style/ShapeAppearance.Soulpicks.MediumComponent
        </item>
        <item name="shapeAppearanceLargeComponent">@style/ShapeAppearance.Soulpicks.LargeComponent
        </item>


        <!--Component styles-->
        <item name="materialAlertDialogTheme">@style/ThemeOverlay.MaterialComponents.Dialog.Alert
        </item>
        <item name="bottomSheetDialogTheme">@style/ThemeOverlay.Soulpicks.BottomSheetDialog</item>
        <item name="navigationViewStyle">@style/Widget.Soulpicks.NavigationView</item>
        <item name="toolbarStyle">@style/Widget.MaterialComponents.Toolbar.Surface</item>
        <item name="appBarLayoutStyle">@style/Widget.MaterialComponents.AppBarLayout.Surface</item>
        <item name="materialButtonStyle">@style/Widget.Soulpicks.Button</item>
        <item name="materialButtonOutlinedStyle">@style/Widget.Soulpicks.OutlinedButton</item>
        <item name="borderlessButtonStyle">@style/Widget.Soulpicks.TextButton</item>
        <item name="tabStyle">@style/Widget.Soulpicks.TabLayout</item>
        <item name="chipStyle">@style/Widget.Soulpicks.Chip</item>
        <item name="bottomNavigationStyle">@style/Widget.Soulpicks.BottomNavigation</item>
        <item name="searchViewStyle">@style/Widget.Soulpicks.SearchView</item>
        <item name="android:searchViewStyle">@style/Widget.Soulpicks.SearchView</item>
        <item name="switchStyle">@style/Widget.Soulpicks.Switch</item>
        <item name="checkboxStyle">@style/Widget.Soulpicks.Checkbox</item>
        <item name="textInputStyle">@style/Widget.Soulpicks.TextInputLayout</item>
        <item name="floatingActionButtonStyle">@style/Widget.Soulpicks.FloatingActionButton</item>
        <item name="extendedFloatingActionButtonStyle">
            @style/Widget.Soulpicks.ExtendedFloatingActionButton
        </item>
        <item name="materialCardViewStyle">@style/Widget.Soulpicks.CardView</item>
    </style>


    <!-- Base stuff for windows, statusbars, stuff not related to the app itself -->
    <style name="Base.Theme.SoulpicksThemeBuilder" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <item name="android:statusBarColor" tools:ignore="NewApi">?attr/colorSurface</item>
        <item name="android:windowLightStatusBar" tools:ignore="NewApi">true</item>
        <item name="android:navigationBarColor" tools:ignore="NewApi">
            ?android:attr/colorBackground
        </item>
        <item name="android:windowLightNavigationBar" tools:ignore="NewApi">true</item>
        <item name="android:navigationBarDividerColor" tools:ignore="NewApi">
            ?attr/colorControlHighlight
        </item>
    </style>
</resources>
